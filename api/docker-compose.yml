version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    image: stoik/api:nestjs9
    depends_on:
      database:
        condition: service_healthy
    restart: always
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_PORT: ${POSTGRES_PORT}
      API_URL: ${API_URL}
    networks:
      - app
  database:
    image: postgres
    container_name: database
    restart: always
    networks:
      - app
    environment:
      POSTGRES_RANDOM_ROOT_PASSWORD: true
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${DATABASE_HOST}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${POSTGRES_USERNAME}",
          "-d",
          "${POSTGRES_DATABASE}",
        ]
      interval: 5s
      timeout: 5s
      retries: 50
  server:
    image: nginx:stable-alpine
    container_name: stoik-nginx
    depends_on:
      - api
    restart: always
    networks:
      - app
    volumes:
      - ./confignginx:/etc/nginx/templates
    ports:
      - 3000:80

networks:
  app:
